{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst btnEl = document.querySelector('button');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timer = null;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n    if (selected <= new Date()) {\n      iziToast.warning({\n        title: 'Увага',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      btnEl.disabled = true;\n    } else {\n      userSelectedDate = selected;\n      btnEl.disabled = false;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nbtnEl.addEventListener('click', onClick);\n\nfunction onClick(event) {\n  btnEl.disabled = true;\n  inputEl.disabled = true;\n  timer = setInterval(timeCounter, 1000);\n}\n\nfunction timeCounter() {\n  let timeNow = new Date();\n  let countedTime = userSelectedDate - timeNow;\n\n  if (countedTime <= 0) {\n    clearInterval(timer);\n    timeUpdate({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    inputEl.disabled = false;\n    return;\n  }\n  const time = msecToSec(countedTime);\n  timeUpdate(time);\n}\n\nfunction timeUpdate({ days, hours, minutes, seconds }) {\n  daysEl.textContent = addZero(days);\n  hoursEl.textContent = addZero(hours);\n  minutesEl.textContent = addZero(minutes);\n  secondsEl.textContent = addZero(seconds);\n}\n\nfunction addZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction msecToSec(ms) {\n  const sec = 1000;\n  const min = sec * 60;\n  const hour = min * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / min);\n  const seconds = Math.floor((((ms % day) % hour) % min) / sec);\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputEl","btnEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timer","options","selectedDates","selected","iziToast","flatpickr","onClick","event","timeCounter","countedTime","timeUpdate","time","msecToSec","days","hours","minutes","seconds","addZero","value","ms"],"mappings":"+IAMA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAQ,SAAS,cAAc,QAAQ,EACvCC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAQ,KACZ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAC5BC,GAAY,IAAI,MAClBC,EAAS,QAAQ,CACf,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDV,EAAM,SAAW,KAEjBK,EAAmBI,EACnBT,EAAM,SAAW,GAEpB,CACH,EAEAW,EAAUZ,EAASQ,CAAO,EAE1BP,EAAM,iBAAiB,QAASY,CAAO,EAEvC,SAASA,EAAQC,EAAO,CACtBb,EAAM,SAAW,GACjBD,EAAQ,SAAW,GACnBO,EAAQ,YAAYQ,EAAa,GAAI,CACvC,CAEA,SAASA,GAAc,CAErB,IAAIC,EAAcV,EADJ,IAAI,KAGlB,GAAIU,GAAe,EAAG,CACpB,cAAcT,CAAK,EACnBU,EAAW,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACxDjB,EAAQ,SAAW,GACnB,MACD,CACD,MAAMkB,EAAOC,EAAUH,CAAW,EAClCC,EAAWC,CAAI,CACjB,CAEA,SAASD,EAAW,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACrDrB,EAAO,YAAcsB,EAAQJ,CAAI,EACjCjB,EAAQ,YAAcqB,EAAQH,CAAK,EACnCjB,EAAU,YAAcoB,EAAQF,CAAO,EACvCjB,EAAU,YAAcmB,EAAQD,CAAO,CACzC,CAEA,SAASC,EAAQC,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAKrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAG,EAC9CH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAO,GAAG,EAC5D,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}